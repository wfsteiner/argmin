var searchIndex = JSON.parse('{\
"argmin":{"doc":"argmin is a numerical optimization library written â€¦","t":[14,0,14,0,14,13,13,13,13,3,4,8,3,3,8,8,8,3,3,3,8,13,13,4,13,13,8,3,13,13,16,16,13,13,3,13,16,13,13,3,18,13,13,13,13,3,13,13,13,8,3,4,3,16,16,8,8,3,13,13,13,4,3,3,4,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,12,12,11,12,5,0,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,10,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,5,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["check_param","core","make_kv","solver","trait_bound","Aborted","AcceptedStallIterExceeded","Always","Always","ArgminCheckpoint","ArgminError","ArgminFloat","ArgminIterData","ArgminKV","ArgminLineSearch","ArgminNLCGBetaUpdate","ArgminOp","ArgminResult","ArgminSlogKV","ArgminSlogLogger","ArgminTrustRegion","BestStallIterExceeded","Bincode","CheckpointMode","CheckpointNotFound","ConditionViolated","DeserializeOwnedAlias","Error","Every","Every","Float","Hessian","ImpossibleError","InvalidParameter","IterState","JSON","Jacobian","LineSearchConditionMet","MaxItersReached","MinimalNoOperator","NAME","Never","Never","NewBest","NoChangeInCost","NoOperator","NotImplemented","NotInitialized","NotTerminated","Observe","Observer","ObserverMode","OpWrapper","Output","Param","SerializeAlias","Solver","Surface","TargetCostReached","TargetPrecisionReached","TargetToleranceReached","TerminationReason","Visualizer3d","WriteToFile","WriteToFileSerializer","apply","apply","apply","apply","as_ref","as_ref","best_cost","best_cost","best_param","best_param","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","consume_func_counts","consume_op","context","cost","cost","cost","cost_func_count","cost_func_count","current_param_is_new_best","default","default","default","default","default","default","default","default","default","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dir","downcast","downcast_mut","downcast_ref","drop","eq","eq","eq","eq","eq","eq","eq","eq","executor","extend","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_best_cost","get_best_param","get_best_param_ref","get_cost","get_cost","get_cost_func_count","get_grad","get_grad","get_grad_func_count","get_grad_ref","get_hessian","get_hessian","get_hessian_func_count","get_hessian_ref","get_inv_hessian","get_inv_hessian","get_inv_hessian_ref","get_iter","get_jacobian","get_jacobian","get_jacobian_func_count","get_jacobian_ref","get_kv","get_last_best_iter","get_max_iters","get_modify_func_count","get_op","get_param","get_param","get_param_ref","get_population","get_population","get_prev_best_cost","get_prev_best_param","get_prev_best_param_ref","get_prev_cost","get_prev_grad","get_prev_grad_ref","get_prev_hessian","get_prev_hessian_ref","get_prev_inv_hessian","get_prev_inv_hessian_ref","get_prev_jacobian","get_prev_jacobian_ref","get_prev_param","get_prev_param_ref","get_target_cost","get_termination_reason","get_termination_reason","get_time","grad","grad","grad","grad_func_count","grad_func_count","gradient","gradient","gradient","gradient","hash","hash","hash","hash","hash","hash","hessian","hessian","hessian","hessian","hessian","hessian","hessian","hessian_func_count","hessian_func_count","increment_cost_func_count","increment_func_counts","increment_grad_func_count","increment_hessian_func_count","increment_iter","increment_jacobian_func_count","increment_modify_func_count","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","inv_hessian","inv_hessian","inv_hessian","is","is_best","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","jacobian","jacobian","jacobian","jacobian","jacobian","jacobian_func_count","jacobian_func_count","kv","kv","kv","last_best_iter","last_best_iter","load_checkpoint","macros","max_iters","max_iters","merge","modify","modify","modify","modify","modify_func_count","modify_func_count","msg","name","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new_best","next_iter","observe_init","observe_init","observe_init","observe_iter","observe_iter","observe_iter","op","operator","operator","param","param","param","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","population","population","population","prev_best_cost","prev_best_param","prev_cost","prev_grad","prev_hessian","prev_inv_hessian","prev_jacobian","prev_param","push","push","reset","root_cause","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_dir","set_func_counts","set_init_alpha","set_mode","set_name","set_radius","set_search_direction","slog_logger","state","state","store","store_cond","take_best_param","take_grad","take_hessian","take_inv_hessian","take_jacobian","take_op","take_param","take_prev_best_param","take_prev_grad","take_prev_hessian","take_prev_inv_hessian","take_prev_jacobian","take_prev_param","target_cost","target_cost","terminate","terminate_internal","terminated","terminated","termination_reason","termination_reason","termination_reason","text","time","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","visualizer","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","text","text","text","text","text","text","0","0","Executor","add_observer","borrow","borrow_mut","checkpoint_dir","checkpoint_mode","checkpoint_name","clone","clone_into","cost","ctrlc","deserialize","from","from_checkpoint","from_subset","grad","hessian","into","is_in_subset","jacobian","max_iters","new","op","run","serialize","target_cost","timer","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Bincode","JSON","WriteToFile","WriteToFileSerializer","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from_subset","from_subset","into","into","is_in_subset","is_in_subset","ne","new","observe_iter","partial_cmp","partial_cmp","serialize","serialize","serializer","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgminSlogKV","ArgminSlogLogger","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","file","file_noblock","from","from","from","from_subset","from_subset","into","into","is_in_subset","is_in_subset","kv","observe_init","observe_iter","serialize","term","term_noblock","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Surface","Visualizer3d","borrow","borrow","borrow_mut","borrow_mut","default","delay","from","from","from_subset","from_subset","into","into","is_in_subset","is_in_subset","new","new","observe_iter","surface","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","brent","conjugategradient","gaussnewton","goldensectionsearch","gradientdescent","landweber","linesearch","neldermead","newton","particleswarm","quasinewton","simulatedannealing","trustregion","Brent","BrentError","WrongSign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","fmt","fmt","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","new","next_iter","serialize","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","beta","cg","nonlinear_cg","FletcherReeves","HestenesStiefel","PolakRibiere","PolakRibierePlus","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","update","update","vzip","vzip","vzip","vzip","ConjugateGradient","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","p","p_prev","residual","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","NonlinearConjugateGradient","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","restart_iters","restart_orthogonality","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","gaussnewton_linesearch","gaussnewton_method","GaussNewtonLS","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","into","is_in_subset","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tol","GaussNewton","borrow","borrow_mut","clone","clone_into","default","deserialize","from","from_subset","into","is_in_subset","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_gamma","with_tol","GoldenSectionSearch","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","tolerance","try_from","try_into","type_id","vzip","steepestdescent","SteepestDescent","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","into","is_in_subset","new","next_iter","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Landweber","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","into","is_in_subset","new","next_iter","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","backtracking","condition","hagerzhang","morethuente","BacktrackingLineSearch","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","rho","serialize","set_init_alpha","set_search_direction","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ArmijoCondition","GoldsteinCondition","LineSearchCondition","StrongWolfeCondition","WolfeCondition","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","eval","eval","eval","eval","eval","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","requires_cur_grad","requires_cur_grad","requires_cur_grad","requires_cur_grad","requires_cur_grad","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","HagerZhangLineSearch","alpha","borrow","borrow_mut","clone","clone_into","default","delta","deserialize","epsilon","eta","from","from_subset","gamma","init","into","is_in_subset","new","next_iter","serialize","set_init_alpha","set_search_direction","sigma","terminate","theta","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MoreThuenteLineSearch","alpha","borrow","borrow_mut","c","clone","clone_into","default","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","serialize","set_init_alpha","set_search_direction","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","NelderMead","alpha","borrow","borrow_mut","clone","clone_into","default","deserialize","from","from_subset","gamma","init","into","is_in_subset","new","next_iter","rho","sd_tolerance","serialize","sigma","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_initial_params","newton_cg","newton_method","NewtonCG","borrow","borrow_mut","clone","clone_into","curvature_threshold","deserialize","from","from_subset","into","is_in_subset","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tol","Newton","borrow","borrow_mut","clone","clone_into","default","deserialize","from","from_subset","into","is_in_subset","new","next_iter","serialize","set_gamma","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Particle","ParticleSwarm","Position","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cost","deserialize","deserialize","fmt","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","new","next_iter","position","serialize","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bfgs","dfp","lbfgs","sr1","sr1_trustregion","BFGS","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tol_cost","with_tol_grad","DFP","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tol_grad","LBFGS","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tol_cost","with_tol_grad","SR1","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","new","next_iter","r","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tol_cost","with_tol_grad","SR1TrustRegion","borrow","borrow_mut","clone","clone_into","deserialize","eta","from","from_subset","hessian","init","into","is_in_subset","new","next_iter","r","radius","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tol_grad","Boltzmann","Exponential","SATempFunc","SimulatedAnnealing","TemperatureFast","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","fmt","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","new","next_iter","reannealing_accepted","reannealing_best","reannealing_fixed","serialize","serialize","stall_accepted","stall_best","temp_func","terminate","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","cauchypoint","dogleg","reduction_ratio","steihaug","trustregion_method","CauchyPoint","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","from_subset","into","is_in_subset","ne","new","next_iter","partial_cmp","serialize","set_radius","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Dogleg","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","from_subset","into","is_in_subset","ne","new","next_iter","partial_cmp","serialize","set_radius","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Steihaug","borrow","borrow_mut","clone","clone_into","default","deserialize","epsilon","from","from_subset","init","into","is_in_subset","max_iters","new","next_iter","serialize","set_radius","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","TrustRegion","borrow","borrow_mut","clone","clone_into","deserialize","eta","from","from_subset","init","into","is_in_subset","max_radius","new","next_iter","radius","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":["argmin","","","","","argmin::coreargmin::core::ArgminError","","","","","","argmin::core::CheckpointMode","argmin::core::ObserverMode","argmin::core::executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::core::file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::core::slog_logger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::core::visualizer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver","","","","","","","","","","","","","argmin::solver::brent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::conjugategradient","","","argmin::solver::conjugategradient::beta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::conjugategradient::cg","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::conjugategradient::nonlinear_cg","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::gaussnewton","","argmin::solver::gaussnewton::gaussnewton_linesearch","","","","","","","","","","","","","","","","","","","","","","argmin::solver::gaussnewton::gaussnewton_method","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::goldensectionsearch","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::gradientdescent","argmin::solver::gradientdescent::steepestdescent","","","","","","","","","","","","","","","","","","","","argmin::solver::landweber","","","","","","","","","","","","","","","","","","","","argmin::solver::linesearch","","","","argmin::solver::linesearch::backtracking","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::linesearch::condition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::linesearch::hagerzhang","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::linesearch::morethuente","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::neldermead","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::newton","","argmin::solver::newton::newton_cg","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::newton::newton_method","","","","","","","","","","","","","","","","","","","","","","argmin::solver::particleswarm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::quasinewton","","","","","argmin::solver::quasinewton::bfgs","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::quasinewton::dfp","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::quasinewton::lbfgs","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::quasinewton::sr1","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::quasinewton::sr1_trustregion","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::simulatedannealing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::simulatedannealing::SATempFunc","argmin::solver::trustregion","","","","","argmin::solver::trustregion::cauchypoint","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::trustregion::dogleg","","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::trustregion::steihaug","","","","","","","","","","","","","","","","","","","","","","","","","","argmin::solver::trustregion::trustregion_method","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Release an <code>T</code> from an <code>Option&lt;T&gt;</code> if it is not <code>None</code>. If it is â€¦","Argmin Optimizaton toolbox core","Creates an <code>ArgminKV</code> at compile time in order to avoid â€¦","Solvers","Reuse a list of trait bounds by giving it a name, e.g. â€¦","Aborted","Acceped stall iter exceeded","Call observer in every iteration","Create checkpoint in every iteration","Checkpoint","Argmin error type","Trait alias to simplify common trait bounds","The datastructure which is returned by the <code>next_iter</code> â€¦","A simple key-value storage","Defines a common interface for line search methods.","Common interface for beta update methods (Nonlinear-CG)","This trait needs to be implemented for every operator/cost â€¦","Final struct returned by the <code>run</code> method of <code>Executor</code>.","This type is necessary in order to be able to implement â€¦","A logger based on <code>slog</code>","Defines a common interface to methods which calculate â€¦","Best stall iter exceeded","Bincode","Defines at which intervals a checkpoint is saved.","Checkpoint was not found","Indicates that a condition is violated","If the <code>serde1</code> feature is set, it acts as an alias for â€¦","The <code>Error</code> type, a wrapper around a dynamic error type.","Call observer every N iterations","Create checkpoint every N iterations","Precision of floats","Type of Hessian","Indicates an impossible error","Indicates and invalid parameter","Maintains the state from iteration to iteration of a solver","JSON","Type of Jacobian","Condition for Line search met","Maximum number of iterations reached","Minimal No-op operator which does nothing, really.","Name of the solver","Never call the observer","Never create checkpoint","Call observer when new best is found","Cost function value did not change","Fake Operators for testing No-op operator with free choice â€¦","Indicates that a function is not implemented","Indicates that a function is not initialized","In case it has not terminated yet","Defines the interface every Observer needs to expose","Container for observers which acts just like a single â€¦","This is used to indicate how often the observer will â€¦","This wraps an operator and keeps track of how often the â€¦","Output of the operator","Type of the parameter vector","If the <code>serde1</code> feature is set, it acts as an alias for â€¦","Solver","Helper class for visualized surface","Target cost function value reached","Target precision reached","Target tolerance reached","Indicates why the optimization algorithm stopped","Visualize iterations of a solver for cost functions of type","Write parameter vectors to file","Different kinds of serializers","Applies the operator/cost function to parameters","Do nothing, really.","Do nothing, really.","Calls the <code>apply</code> method of <code>op</code> and increments <code>cost_func_count</code>â€¦","","","Set the current best cost function value. This shifts the â€¦","Current best cost function value","Set best paramater vector. This shifts the stored best â€¦","Current best parameter vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator of the chain of source errors contained by â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds function evaluation counts of another operator.","Consumes an operator by increasing the function call â€¦","Wrap the error value with additional context.","Set the current cost function value. This shifts the â€¦","Set cost function value","Current cost function value","Number of cost function evaluations so far","Number of cost function evaluations","Sets the current parameter vector as the new best â€¦","","","","","","The default is <code>Always</code>","","","","","","","","","","","","","","","","","Get directory of checkpoint","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","","","Executor","","Output parameter vectors to file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns current best cost function value","Returns best parameter vector","Returns reference to best parameter vector","Returns current cost function value","Get cost function value","Returns current cost function evaluation count","Returns gradient","Get gradient","Returns current gradient function evaluation count","Returns reference to the gradient","Returns current Hessian","Get Hessian","Returns current Hessian function evaluation count","Returns reference to the current Hessian","Returns current inverse Hessian","Get inverse Hessian","Returns reference to the current inverse Hessian","Returns current number of iterations","Returns current Jacobian","Get Jacobian","Returns current Jacobian function evaluation count","Returns reference to the current Jacobian","Return KV","Returns iteration number where the last best parameter â€¦","Returns maximum number of iterations","Returns current Modify function evaluation count","Returns the operator <code>op</code> by taking ownership of <code>self</code>.","Returns current parameter vector","Get parameter vector","Returns reference to current parameter vector","Returns population","Get reference to population","Returns previous best cost function value","Returns previous best parameter vector","Returns reference to previous best parameter vector","Returns previous cost function value","Returns previous gradient","Returns reference to the previous gradient","Returns previous Hessian","Returns reference to the previous Hessian","Returns previous inverse Hessian","Returns reference to the previous inverse Hessian","Returns previous Jacobian","Returns reference to the previous Jacobian","Returns previous parameter vector","Returns reference to previous parameter vector","Returns target cost","Get termination_reason","Get termination reason","Get time required so far","Set gradient. This shifts the stored gradient to the â€¦","Set gradient","Current gradient","Number of gradient evaluations so far","Number of gradient function evaluations","Computes the gradient at the given parameters","Do nothing, really.","Do nothing, really.","Calls the <code>gradient</code> method of <code>op</code> and increments â€¦","","","","","","","Computes the Hessian at the given parameters","Set Hessian. This shifts the stored Hessian to the â€¦","Do nothing, really.","Do nothing, really.","Calls the <code>hessian</code> method of <code>op</code> and increments â€¦","Set Hessian","Current Hessian","Number of Hessian evaluations so far","Number of Hessian function evaluations","Increment cost function evaluation count by <code>num</code>","Increment all function evaluation counts by the evaluation â€¦","Increment gradient function evaluation count by <code>num</code>","Increment Hessian function evaluation count by <code>num</code>","Increment the number of iterations by one","Increment Jacobian function evaluation count by <code>num</code>","Increment modify function evaluation count by <code>num</code>","Initializes the algorithm","","","","","","","","","","","","","","","Set inverse Hessian. This shifts the stored inverse â€¦","Set inverse Hessian","Current inverse Hessian","Returns true if <code>E</code> is the type held by this error object.","Returns whether the current parameter vector is also the â€¦","Returns true if <code>observers</code> is empty","","","","","","","","","","","","","","","Current iteration","Computes the Hessian at the given parameters","Set Jacobian. This shifts the stored Jacobian to the â€¦","Calls the <code>jacobian</code> method of <code>op</code> and increments â€¦","Set Jacobian","Current Jacobian","Number of Jacobian evaluations so far","Number of Jacobian function evaluations","Adds an <code>ArgminKV</code>","Key value store","The actual key value storage","Set iteration number where the previous best parameter â€¦","Iteration number of last best cost","Load a checkpoint from disk","Macros","Set maximum number of iterations","Maximum number of iterations","Merge another <code>kv</code> into <code>self.kv</code>","Modifies a parameter vector. Comes with a variable that â€¦","Do nothing, really.","Do nothing, really.","Calls the <code>modify</code> method of <code>op</code> and increments â€¦","Number of modify evaluations so far","Number of <code>modify</code> function evaluations","Create a new error object from a printable error message.","Get name of checkpoint","","","","","","Create new IterState from <code>param</code>","Constructor","Constructor","Constructor","Constructor","Construct an <code>OpWrapper</code> from an operator","Constructor","Define a new checkpoint","Constructor","Create a new error object from any error type.","Indicate that a new best parameter vector was found","Computes one iteration of the algorithm.","Called once at the beginning of the execution of the â€¦","Called once at the beginning of the execution of the â€¦","Initial observation This is called after the â€¦","Called at every iteration of the solver","Called at every iteration of the solver","This is called after every iteration and gets the current â€¦","Operator","Return handle to operator","operator","Set parameter vector. This shifts the stored parameter â€¦","Set parameter vector","Current parameter vector","","","","","","","","","Set population","Set Population","All members for population-based algorithms as (param, â€¦","Previous best cost function value","Previous best parameter vector","Previous cost function value","Previous gradient","Previous Hessian","Previous inverse Hessian","Previous Jacobian","Previous parameter vector","Push a key-value pair to the <code>kv</code> vector.","Push another <code>Observe</code> to the <code>observer</code> field","Reset the cost function counts to zero.","The lowest level cause of this error â€” this errorâ€™s â€¦","","","","","","","","","","","Set directory of checkpoint","Set all function evaluation counts to the evaluation â€¦","Set the initial step length","Set mode of checkpoint","Set name of checkpoint","Set the initial step length","Set the search direction","Loggers based on the <code>slog</code> crate","Return handle to state","iteration state","Write checkpoint to disk","Write checkpoint based on the desired <code>CheckpointMode</code>","Moves the best parameter vector out and replaces it â€¦","Moves the gradient out and replaces it internally with <code>None</code>","Moves the Hessian out and replaces it internally with <code>None</code>","Moves the inverse Hessian out and replaces it internally â€¦","Moves the Jacobian out and replaces it internally with <code>None</code>","Moves the operator out of the struct and replaces it with â€¦","Moves the current parameter vector out and replaces it â€¦","Moves the previous best parameter vector out and replaces â€¦","Moves the previous gradient out and replaces it internally â€¦","Moves the previous Hessian out and replaces it internally â€¦","Moves the previous inverse Hessian out and replaces it â€¦","Moves the previous Jacobian out and replaces it internally â€¦","Moves the previous parameter vector out and replaces it â€¦","Set target cost value","Target cost function value","Checks whether the algorithm must be terminated","Checks whether basic termination reasons apply.","Return whether the algorithm has terminated or not","Returns <code>true</code> if a solver terminated and <code>false</code> otherwise","Set termination_reason","Set termination reason","Reason of termination","Returns a texual representation of what happened","Set time required so far","Time required so far","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update beta Parameter 1: \\\\nabla f_k Parameter 2: \\\\nabla f_â€¦","Observer which visualizes the progress of the solver","","","","","","","","","","","","","","","Text","Text","Text","Text","Text","Text","","","Executes a solver","Attaches a observer which implements <code>ArgminLog</code> to the â€¦","","","Set checkpoint directory","Set the checkpoint mode","Set checkpoint name","","","Set cost value","Turn Ctrl-C handling on or off (default: on)","","","Create a new executor from a checkpoint","","Set Gradient","Set Hessian","","","Set Jacobian","Set maximum number of iterations","Create a new executor with a <code>solver</code> and an initial â€¦","operator","Run the executor","","Set target cost value","Turn timer on or off (default: on)","","","","","","","","Bincode","JSON","Write parameter vectors to file","Different kinds of serializers","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>WriteToFile</code> struct","","","","","","Set serializer","","","","","","","","","","","","","","","This type is necessary in order to be able to implement â€¦","A logger based on <code>slog</code>","","","","","","","Log JSON to a file in a blocking way","Log JSON to a file in a non-blocking way (in case of â€¦","","","","","","","","","","Key value store","Log general info","This should be used to log iteration data only (because â€¦","","Log to the terminal in a blocking way","Log to the terminal in a non-blocking way (in case of â€¦","","","","","","","","","","","","","","Helper class for visualized surface","Visualize iterations of a solver for cost functions of type","","","","","","Set delay","","","","","","","","","Create a new visualizer","Create a new surface","","Set surface","","","","","","","","","","","","","Brentâ€™s method","Conjugate Gradient methods","Newton Methods","Golden Section Search","Gradient descent methods","Landweber iteration","Line search methods","Nelder Mead method","Newton Methods","Particle Swarm Optimization","Quasi-Newton methods","Simulated Annealing","Trust region methods","Brentâ€™s method","Error to be thrown if Brent is initialized with improper â€¦","f(min) and f(max) must have different signs","","","","","","","","","","","","","","","","","","","Constructor The values <code>min</code> and <code>max</code> must bracketing the â€¦","","","","","","","","","","","","","","","","","Beta update methods for nonlinear CG","Conjugate gradient method","Nonlinear conjugate gradient method","Fletcher and Reeves (FR) method TODO: Reference","Hestenes and Stiefel (HS) method TODO: Reference","Polak and Ribiere (PR) method TODO: Reference","Polak and Ribiere Plus (PR+) method TODO: Reference","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor","Constructor","Constructor","Constructor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The conjugate gradient method is a solver for systems of â€¦","","","","","","","","","","","Constructor","Perform one iteration of CG algorithm","Return the current search direction (This is needed by â€¦","Return the previous search direction (This is needed by â€¦","Return the current residual (This is needed by NewtonCG â€¦","","","","","","","","","The nonlinear conjugate gradient is a generalization of â€¦","","","","","","","","","","","Constructor (Polak Ribiere Conjugate Gradient (PR-CG))","","Specifiy the number of iterations after which a restart â€¦","Set the value for the orthogonality measure. Setting this â€¦","","","","","","","","","Gauss-Newton method with linesearch","Gauss-Newton method","Gauss-Newton method with linesearch","","","","","","","","","","Constructor","","","","","","","","","","","Set tolerance for the stopping criterion based on cost â€¦","Gauss-Newton method","","","","","","","","","","","Constructor","","","","","","","","","","","set gamma","Set tolerance for the stopping criterion based on cost â€¦","Golden-section search","","","","","","","","","","","Constructor","","","","","","","Set tolerance","","","","","Steepest Descent method","Steepest descent iteratively takes steps in the direction â€¦","","","","","","","","","","Constructor","","","","","","","","","","The Landweber iteration is a solver for ill-posed linear â€¦","","","","","","","","","","Constructor","","","","","","","","","","Backtracking line search algorithm","Acceptance conditions","Hager-Zhang line search algorithm","More-Thuente line search algorithm TODO: Apparently it is â€¦","The Backtracking line search is a simple method to find a â€¦","","","","","","","","","","","Constructor","","Set rho","","Set initial alpha value","Set search direction","","","","","","","","","Armijo Condition","Goldstein conditions","Needs to be implemented by everything that wants to be a â€¦","Strong Wolfe conditions","Wolfe Condition","","","","","","","","","","","","","","","","","","","","","","","","","Evaluate the condition","","","","","","","","","","","","","","","","","","","","","","","","","Constructor","Constructor","Constructor","Constructor","Indicates whether this condition requires the computation â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Hager-Zhang line search is a method to find a step â€¦","set alpha limits","","","","","","set delta","","set epsilon","set eta","","","set gamma","","","","Constructor","","","Set initial alpha value","Set search direction","set sigma","","set theta","","","","","","","","The More-Thuente line search is a method to find a step â€¦","set alpha limits","","","Set c1 and c2 where 0 &lt; c1 &lt; c2 &lt; 1.","","","","","","","","","","Constructor","","","Set initial alpha value","Set search direction","","","","","","","","Nelder-Mead method","set alpha","","","","","","","","","set gamma","","","","Constructor","","set rho","Set Sample standard deviation tolerance","","set sigma","","","","","","","","","Add initial parameters","Newton-CG method TODO: Stop when search direction is close â€¦","Newtonâ€™s method","The Newton-CG method (also called truncated Newton method) â€¦","","","","","Set curvature threshold","","","","","","Constructor","","","","","","","","","","","Set tolerance for the stopping criterion based on cost â€¦","Newtonâ€™s method iteratively finds the stationary points â€¦","","","","","","","","","","","Constructor","","","set gamma","","","","","","","","A single particle","Particle Swarm Optimization (PSO)","Position","","","","","","","","","Cost of particle","","","","","","","","","","","","","Constructor","Perform one iteration of algorithm","Position of particle","","","","","","","","","","","","","","","","","References:","References:","References:","References:","References:","BFGS method","","","","","","","","","","","Constructor","","","","","","","","","","","Sets tolerance for the stopping criterion based on the â€¦","Sets tolerance for the stopping criterion based on the â€¦","DFP method","","","","","","","","","","","Constructor","","","","","","","","","","","Sets tolerance for the stopping criterion based on the â€¦","L-BFGS method","","","","","","","","","","","Constructor","","","","","","","","","","","Sets tolerance for the stopping criterion based on the â€¦","Sets tolerance for the stopping criterion based on the â€¦","SR1 method (broken!)","","","","","","","","","","","Constructor","","Set r","","","","","","","","","","Sets tolerance for the stopping criterion based on the â€¦","Sets tolerance for the stopping criterion based on the â€¦","SR1 Trust Region method","","","","","","Set eta","","","provide initial Hessian (if not provided, the algorithm â€¦","","","","Constructor","","Set r","set radius","","","","","","","","","","Sets tolerance for the stopping criterion based on the â€¦","<code>t_i = t_init / ln(i)</code>","<code>t_i = t_init * x^i</code>","Temperature functions for Simulated Annealing.","Simulated Annealing","<code>t_i = t_init / i</code>","","","","","","","","","","","","","","","","","","","","","","Constructor","Perform one iteration of SA algorithm","Start reannealing after no accepted solution has been â€¦","Start reannealing after no new best solution has been â€¦","Start reannealing after <code>iter</code> iterations","","","The optimization stops after there has been no accepted â€¦","The optimization stops after there has been no new best â€¦","Set temperature function to one of the options in â€¦","","","","","","","","","","","","","","","","","Cauchy Point","Dogleg method","Computes reduction ratio","Steihaug method","Trust region solver","The Cauchy point is the minimum of the quadratic â€¦","","","","","","","","","","","","","","Constructor","","","","","","","","","","","","","The Dogleg method computes the intersection of the trust â€¦","","","","","","","","","","","","","","Constructor","","","","","","","","","","","","","The Steihaug method is a conjugate gradients based â€¦","","","","","","","Set epsilon","","","","","","set maximum number of iterations","Constructor","","","","","","","","","","","","The trust region method approximates the cost function â€¦","","","","","","Set eta","","","","","","Set maximum radius","Constructor","","set radius","","","","","","","","",""],"i":[0,0,0,0,0,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,4,0,5,5,0,0,2,3,6,6,5,5,0,4,6,1,1,0,7,2,3,2,1,0,5,5,1,0,0,0,0,6,6,0,0,0,1,1,1,0,0,0,0,6,8,9,10,11,11,12,12,12,12,5,12,13,8,9,14,2,10,15,3,16,1,17,11,5,12,13,8,9,14,2,10,15,3,16,1,17,11,11,12,13,8,9,14,2,10,15,3,16,1,17,12,13,8,9,14,2,10,15,3,16,1,17,13,8,9,2,15,3,16,1,10,10,11,12,17,12,12,10,12,12,13,8,9,14,2,10,3,16,1,17,11,11,12,13,8,9,2,10,3,16,1,16,11,11,11,11,13,8,9,2,15,3,16,1,0,13,0,5,5,12,13,13,8,8,9,9,2,10,15,3,3,16,1,1,17,11,11,5,12,13,8,9,14,2,10,15,3,16,1,17,11,11,11,13,5,12,13,8,9,14,2,10,15,3,16,1,17,11,12,12,12,12,17,12,12,17,12,12,12,17,12,12,12,17,12,12,12,17,12,12,17,12,12,12,10,12,17,12,12,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,12,12,17,12,12,10,6,8,9,10,13,8,9,3,16,1,6,12,8,9,10,17,12,12,10,12,12,12,12,12,12,12,7,5,12,13,8,9,14,2,10,15,3,16,1,17,11,12,17,12,11,12,14,5,12,13,8,9,14,2,10,15,3,16,1,17,11,12,6,12,10,17,12,12,10,17,18,13,12,12,0,0,12,12,13,6,8,9,10,12,10,11,16,13,8,2,3,16,12,13,8,9,14,10,15,16,17,11,12,7,19,19,14,19,19,14,10,15,15,12,17,12,13,8,9,2,15,3,16,1,12,17,12,12,12,12,12,12,12,12,12,13,14,10,11,12,12,13,8,9,2,10,3,16,1,16,12,20,16,16,21,20,0,15,15,16,16,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,7,7,12,1,12,17,12,1,12,12,12,13,8,9,14,2,10,15,3,16,1,17,5,13,8,9,15,3,1,11,5,12,13,8,9,14,2,10,15,3,16,1,17,11,5,12,13,8,9,14,2,10,15,3,16,1,17,11,5,12,13,8,9,14,2,10,15,3,16,1,17,11,5,12,13,8,9,14,2,10,15,3,16,1,17,11,5,12,13,8,9,14,2,10,15,3,16,1,17,11,22,0,5,12,13,8,9,14,2,10,15,3,16,1,17,11,23,24,25,26,27,28,29,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,4,4,0,0,4,32,4,32,4,32,4,32,4,32,4,4,32,4,32,4,32,4,32,4,32,4,32,4,32,32,32,32,4,32,4,32,32,4,32,4,32,4,32,4,32,4,32,4,32,4,32,0,0,18,33,18,33,33,33,33,33,18,18,33,18,33,18,33,18,33,18,33,33,18,33,33,33,18,33,18,33,18,33,18,33,18,33,18,33,0,0,34,35,34,35,34,34,34,35,34,35,34,35,34,35,34,35,34,34,34,35,34,35,34,35,34,35,34,35,34,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,37,36,37,37,37,37,36,36,36,37,36,37,37,36,37,36,37,37,37,37,37,36,36,37,36,37,36,37,36,37,36,37,36,37,0,0,0,0,0,0,0,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,54,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,54,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,60,61,60,61,60,61,60,61,61,60,61,61,60,61,60,61,60,60,61,60,61,60,60,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,0,0,0,0,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,0,0,67,67,68,67,68,67,68,67,68,67,67,68,67,67,68,67,68,68,67,68,67,68,68,68,68,68,68,67,68,68,68,68,68,67,68,67,68,67,68,67,68,67,68,67,68,67,68,69,0,0,0,0,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["error",8]],[[],["error",8]],[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chain",3]],[[],["iterstate",3]],[[],["argminkv",3]],[[],["nooperator",3]],[[],["minimalnooperator",3]],[[],["observer",3]],[[],["observermode",4]],[[],["opwrapper",3]],[[],["argminresult",3]],[[],["checkpointmode",4]],[[],["argmincheckpoint",3]],[[],["terminationreason",4]],[[],["argminiterdata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argminkv",3]],["ordering",4]],[[["nooperator",3]],["ordering",4]],[[["minimalnooperator",3]],["ordering",4]],[[["observermode",4]],["ordering",4]],[[["argminresult",3]],["ordering",4]],[[["checkpointmode",4]],["ordering",4]],[[["argmincheckpoint",3]],["ordering",4]],[[["terminationreason",4]],["ordering",4]],[[["opwrapper",3,[["argminop",8]]]]],[[["opwrapper",3]]],[[],["error",3]],[[]],[[]],null,null,null,[[]],[[]],[[],["argminkv",3]],[[],["nooperator",3]],[[],["minimalnooperator",3]],[[],["observer",3]],[[],["observermode",4]],[[],["opwrapper",3]],[[],["checkpointmode",4]],[[],["argmincheckpoint",3]],[[]],[[],["argminiterdata",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["string",3]],[[],["result",4,[["error",3]]]],[[],["option",4]],[[],["option",4]],[[]],[[["argminkv",3]],["bool",15]],[[["nooperator",3]],["bool",15]],[[["minimalnooperator",3]],["bool",15]],[[["observermode",4]],["bool",15]],[[["argminresult",3]],["bool",15]],[[["checkpointmode",4]],["bool",15]],[[["argmincheckpoint",3]],["bool",15]],[[["terminationreason",4]],["bool",15]],null,[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[["never",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[],["u64",15]],[[],["option",4]],[[],["option",4]],[[],["u64",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["u64",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["u64",15]],[[],["option",4]],[[],["option",4]],[[],["u64",15]],[[],["option",4]],[[],["argminkv",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4,[["vec",3]]]],[[],["option",4,[["vec",3]]]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["terminationreason",4]],[[],["option",4,[["terminationreason",4]]]],[[],["option",4,[["duration",3]]]],[[]],[[]],null,null,null,[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],null,null,null,[[["u64",15]]],[[["opwrapper",3]]],[[["u64",15]]],[[["u64",15]]],[[]],[[["u64",15]]],[[["u64",15]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["result",4,[["error",3]]]],[[]],[[],["result",4,[["error",3]]]],[[]],null,null,null,[[["argminkv",3]]],null,null,[[["u64",15]]],null,[[["asref",8,[["path",3]]]],["result",4,[["deserializeownedalias",8],["error",3]]]],null,[[["u64",15]]],null,[[["argminkv",3]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["f64",15]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],null,null,[[],["error",3]],[[],["string",3]],[[["argminkv",3]],["bool",15]],[[["nooperator",3]],["bool",15]],[[["observermode",4]],["bool",15]],[[["checkpointmode",4]],["bool",15]],[[["argmincheckpoint",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["opwrapper",3],["iterstate",3]]],[[["str",15],["checkpointmode",4]],["result",4,[["error",3]]]],[[]],[[],["error",3]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[["str",15],["argminkv",3]],["result",4,[["error",3]]]],[[["str",15],["argminkv",3]],["result",4,[["error",3]]]],[[["str",15],["argminkv",3]],["result",4,[["error",3]]]],[[["iterstate",3],["argminkv",3]],["result",4,[["error",3]]]],[[["iterstate",3],["argminkv",3]],["result",4,[["error",3]]]],[[["iterstate",3],["argminkv",3]],["result",4,[["error",3]]]],null,[[],["opwrapper",3]],null,[[]],[[]],null,[[["argminkv",3]],["option",4,[["ordering",4]]]],[[["nooperator",3]],["option",4,[["ordering",4]]]],[[["minimalnooperator",3]],["option",4,[["ordering",4]]]],[[["observermode",4]],["option",4,[["ordering",4]]]],[[["argminresult",3]],["option",4,[["ordering",4]]]],[[["checkpointmode",4]],["option",4,[["ordering",4]]]],[[["argmincheckpoint",3]],["option",4,[["ordering",4]]]],[[["terminationreason",4]],["option",4,[["ordering",4]]]],[[["vec",3]]],[[["vec",3]]],null,null,null,null,null,null,null,null,null,[[["str",15],["display",8]]],[[["observe",8],["observermode",4]]],[[]],[[],["error",8]],[[],["result",4]],[[["record",3],["serializer",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]]],[[["opwrapper",3]]],[[],["result",4,[["error",3]]]],[[["checkpointmode",4]]],[[["str",15]]],[[]],[[]],null,[[],["iterstate",3]],null,[[["str",15]],["result",4,[["error",3]]]],[[["u64",15]],["result",4,[["error",3]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],null,[[["iterstate",3]],["terminationreason",4]],[[["iterstate",3]],["terminationreason",4]],[[],["bool",15]],[[],["bool",15]],[[["terminationreason",4]]],[[["terminationreason",4]]],null,[[],["str",15]],[[["option",4,[["duration",3]]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["observe",8],["observermode",4]]],[[]],[[]],[[["str",15]]],[[["checkpointmode",4]]],[[["str",15]]],[[],["executor",3]],[[]],[[]],[[["bool",15]]],[[],["result",4]],[[]],[[["asref",8,[["path",3]]]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["u64",15]]],[[]],null,[[],["result",4,[["argminresult",3],["error",3]]]],[[],["result",4]],[[]],[[["bool",15]]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["writetofileserializer",4]],[[],["writetofile",3]],[[]],[[]],[[["writetofileserializer",4]],["ordering",4]],[[["writetofile",3]],["ordering",4]],[[]],[[],["result",4]],[[],["result",4]],[[["writetofileserializer",4]],["bool",15]],[[["writetofile",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["writetofile",3]],["bool",15]],[[["str",15],["str",15]]],[[["iterstate",3],["argminkv",3]],["result",4,[["error",3]]]],[[["writetofileserializer",4]],["option",4,[["ordering",4]]]],[[["writetofile",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[["writetofileserializer",4]]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["argminsloglogger",3]],[[]],[[["str",15],["bool",15]],["result",4,[["error",3]]]],[[["str",15],["bool",15]],["result",4,[["error",3]]]],[[]],[[["argminkv",3]],["argminslogkv",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[["str",15],["argminkv",3]],["result",4,[["error",3]]]],[[["iterstate",3],["argminkv",3]],["result",4,[["error",3]]]],[[["record",3],["serializer",8]],["result",6]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[["duration",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[["f64",15]]],[[["iterstate",3],["argminkv",3]],["result",4,[["error",3]]]],[[["surface",3]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["brent",3]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["brent",3]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[]],[[],["string",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fletcherreeves",3]],[[],["polakribiere",3]],[[],["polakribiereplus",3]],[[],["hestenesstiefel",3]],[[]],[[]],[[]],[[]],[[],["fletcherreeves",3]],[[],["polakribiere",3]],[[],["polakribiereplus",3]],[[],["hestenesstiefel",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["conjugategradient",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[],["result",4,[["error",3]]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[]],[[]],[[]],[[],["result",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["nonlinearconjugategradient",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[],["result",4,[["error",3]]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[["u64",15]]],[[]],[[],["result",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[],["gaussnewtonls",3]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["result",4,[["error",3]]]],null,[[]],[[]],[[],["gaussnewton",3]],[[]],[[],["gaussnewton",3]],[[],["result",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],null,[[]],[[]],[[],["goldensectionsearch",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[],["steepestdescent",3]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["landweber",3]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[],["backtrackinglinesearch",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["armijocondition",3]],[[],["wolfecondition",3]],[[],["strongwolfecondition",3]],[[],["goldsteincondition",3]],[[]],[[]],[[]],[[]],[[],["armijocondition",3]],[[],["wolfecondition",3]],[[],["strongwolfecondition",3]],[[],["goldsteincondition",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["option",4]],["bool",15]],[[["option",4]],["bool",15]],[[["option",4]],["bool",15]],[[["option",4]],["bool",15]],[[["option",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[],["result",4,[["error",3]]]],[[]],[[]],[[],["hagerzhanglinesearch",3]],[[]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[],["result",4,[["error",3]]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[],["result",4,[["error",3]]]],[[["iterstate",3]],["terminationreason",4]],[[],["result",4,[["error",3]]]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["result",4,[["error",3]]]],[[]],[[]],[[],["result",4,[["error",3]]]],[[],["morethuentelinesearch",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["result",4,[["error",3]]]],[[]],[[]],[[],["neldermead",3]],[[]],[[],["neldermead",3]],[[],["result",4]],[[]],[[]],[[],["result",4,[["error",3]]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["vec",3]]],null,null,null,[[]],[[]],[[],["newtoncg",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["result",4,[["error",3]]]],null,[[]],[[]],[[],["newton",3]],[[]],[[],["newton",3]],[[],["result",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["particleswarm",3]],[[],["particle",3]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]],["result",4,[["error",3]]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],null,[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["bfgs",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[],["dfp",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["lbfgs",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[["usize",15]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[],["sr1",3]],[[]],[[],["result",4]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[],["sr1trustregion",3]],[[]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["satempfunc",4]],[[],["simulatedannealing",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["result",4,[["error",3]]]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[["u64",15]]],[[["u64",15]]],[[["satempfunc",4]]],[[["iterstate",3]],["terminationreason",4]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[["argminfloat",8],["argminfloat",8],["argminfloat",8],["argminfloat",8]],["argminfloat",8]],null,null,null,[[]],[[]],[[],["cauchypoint",3]],[[]],[[],["cauchypoint",3]],[[],["result",4]],[[["cauchypoint",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["bool",15]],[[["cauchypoint",3]],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[["cauchypoint",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["dogleg",3]],[[]],[[],["dogleg",3]],[[],["result",4]],[[["dogleg",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["bool",15]],[[["dogleg",3]],["bool",15]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[["dogleg",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["steihaug",3]],[[]],[[],["steihaug",3]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[["u64",15]]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[],["result",4]],[[]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["trustregion",3]],[[]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["option",4,[["argminiterdata",3]]],["error",3]]]],[[]],[[],["bool",15]],[[]],[[]],[[["opwrapper",3],["iterstate",3]],["result",4,[["argminiterdata",3],["error",3]]]],[[]],[[],["result",4]],[[["iterstate",3]],["terminationreason",4]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"TerminationReason"],[4,"ObserverMode"],[4,"CheckpointMode"],[4,"WriteToFileSerializer"],[4,"ArgminError"],[8,"ArgminOp"],[8,"Solver"],[3,"NoOperator"],[3,"MinimalNoOperator"],[3,"OpWrapper"],[3,"Error"],[3,"IterState"],[3,"ArgminKV"],[3,"Observer"],[3,"ArgminResult"],[3,"ArgminCheckpoint"],[3,"ArgminIterData"],[3,"ArgminSlogKV"],[8,"Observe"],[8,"ArgminLineSearch"],[8,"ArgminTrustRegion"],[8,"ArgminNLCGBetaUpdate"],[13,"InvalidParameter"],[13,"NotImplemented"],[13,"NotInitialized"],[13,"ConditionViolated"],[13,"CheckpointNotFound"],[13,"ImpossibleError"],[13,"Every"],[13,"Every"],[3,"Executor"],[3,"WriteToFile"],[3,"ArgminSlogLogger"],[3,"Visualizer3d"],[3,"Surface"],[4,"BrentError"],[3,"Brent"],[3,"FletcherReeves"],[3,"PolakRibiere"],[3,"PolakRibierePlus"],[3,"HestenesStiefel"],[3,"ConjugateGradient"],[3,"NonlinearConjugateGradient"],[3,"GaussNewtonLS"],[3,"GaussNewton"],[3,"GoldenSectionSearch"],[3,"SteepestDescent"],[3,"Landweber"],[3,"BacktrackingLineSearch"],[3,"ArmijoCondition"],[3,"WolfeCondition"],[3,"StrongWolfeCondition"],[3,"GoldsteinCondition"],[8,"LineSearchCondition"],[3,"HagerZhangLineSearch"],[3,"MoreThuenteLineSearch"],[3,"NelderMead"],[3,"NewtonCG"],[3,"Newton"],[3,"ParticleSwarm"],[3,"Particle"],[3,"BFGS"],[3,"DFP"],[3,"LBFGS"],[3,"SR1"],[3,"SR1TrustRegion"],[4,"SATempFunc"],[3,"SimulatedAnnealing"],[13,"Exponential"],[3,"CauchyPoint"],[3,"Dogleg"],[3,"Steihaug"],[3,"TrustRegion"]]},\
"argmin_math":{"doc":"argmin-math provides mathematics related abstractions â€¦","t":[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"n":["ArgminAdd","ArgminConj","ArgminDiv","ArgminDot","ArgminEye","ArgminInv","ArgminMinMax","ArgminMul","ArgminNorm","ArgminRandom","ArgminScaledAdd","ArgminScaledSub","ArgminSub","ArgminTranspose","ArgminWeightedDot","ArgminZero","ArgminZeroLike","add","conj","div","dot","eye","eye_like","inv","max","min","mul","norm","rand_from_range","scaled_add","scaled_sub","sub","t","weighted_dot","zero","zero_like"],"q":["argmin_math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Add a <code>T</code> to <code>self</code>","Return the conjugate","(Pointwise) Divide a <code>T</code> by <code>self</code>","Dot/scalar product of <code>T</code> and <code>self</code>","Identity matrix","Compute the inverse (<code>T</code>) of <code>self</code>","Minimum and Maximum of type <code>T</code>","(Pointwise) Multiply a <code>T</code> with <code>self</code>","Compute the l2-norm (<code>U</code>) of <code>self</code>","Create a random number","Add a <code>T</code> scaled by an <code>U</code> to <code>self</code>","Subtract a <code>T</code> scaled by an <code>U</code> from <code>self</code>","Subtract a <code>T</code> from <code>self</code>","Return the transpose (<code>U</code>) of <code>self</code>","Dot/scalar product of <code>T</code> and <code>self</code> weighted by W (p^TWv)","Return param vector of all zeros (for now, this is a hack. â€¦","Zero for dynamically sized objects","Add a <code>T</code> to <code>self</code>","Return conjugate","(Pointwise) Divide a <code>T</code> by <code>self</code>","Dot/scalar product of <code>T</code> and <code>self</code>","Identity matrix of size <code>n</code>","Identity matrix of same size as <code>self</code>","Compute the inverse","Select piecewise maximum","Select piecewise minimum","(Pointwise) Multiply a <code>T</code> with <code>self</code>","Compute the l2-norm (<code>U</code>) of <code>self</code>","Get a random element between min and max,","Add a <code>T</code> scaled by an <code>U</code> to <code>self</code>","Subtract a <code>T</code> scaled by an <code>U</code> from <code>self</code>","Subtract a <code>T</code> from <code>self</code>","Transpose","Dot/scalar product of <code>T</code> and <code>self</code>","Return zero(s)","Return zero(s)"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,5,6,7,7,8,9,10,11,12,13,14,15,16,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"ArgminAdd"],[8,"ArgminConj"],[8,"ArgminDiv"],[8,"ArgminDot"],[8,"ArgminEye"],[8,"ArgminInv"],[8,"ArgminMinMax"],[8,"ArgminMul"],[8,"ArgminNorm"],[8,"ArgminRandom"],[8,"ArgminScaledAdd"],[8,"ArgminScaledSub"],[8,"ArgminSub"],[8,"ArgminTranspose"],[8,"ArgminWeightedDot"],[8,"ArgminZero"],[8,"ArgminZeroLike"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};